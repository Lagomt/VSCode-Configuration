{
// Editor
    "editor.codeLens": true,
    "editor.cursorBlinking": "smooth",
    "editor.fontFamily": "'Fira Code', Consolas, 'Courier New', monospace",
    "editor.fontLigatures": true,
    "editor.fontSize": 13,                                                                          // Use 13 for Fira Code and 14 for Consolas
    "editor.formatOnPaste": false,
    "editor.minimap.enabled": true,
    "editor.minimap.renderCharacters": false,
    "editor.minimap.showSlider": "always",
    "editor.renderWhitespace": "none",
    "editor.selectionHighlight": true,
    "editor.suggestSelection": "first",
    "editor.wordSeparators": "`~!@#$%^&*()_-=+[{]}\\|;:'\",.<>/?",

// Error Lens - Extension: usernamehw.errorlens
    "errorLens.addAnnotationTextPrefixes": true,
    "errorLens.addNumberOfDiagnostics": true,
    "errorLens.gutterIconsEnabled": true,
    "errorLens.messageEnabled": true,
    "errorLens.statusBarColorsEnabled": true,
    "errorLens.statusBarMessageEnabled": true,
    "errorLens.statusBarMessageType": "activeLine",

// Files
    "files.trimFinalNewlines": false,
    "files.trimTrailingWhitespace": false,

// GitLens - Extension: eamodio.gitlens
    "gitlens.defaultDateFormat": "YYYY.MM.DD - HH:mm",
    "gitlens.defaultDateShortFormat": "YY.MM.DD",
    "gitlens.defaultTimeFormat": "HH:MM",

// Powershell
    "powershell.startAutomatically": false,
    "powershell.cwd": "${fileDirname}",

// Python - Extension: ms-python.python
    "python.showStartPage": false,

// Spell Right - Extenion: ban.spellright
    "spellright.documentTypes": [ "plaintext", "markdown", "latex" ],
    "spellright.groupDictionaries": true,
    "spellright.ignoreRegExpsByClass": {
        "markdown": [ "/&amp;/g", "/&nbsp;/g" ],
        "cpp": [ "/#include\\s+\\\".+\\\"/g" ],
        "html": [ "/<script>[^]*?</script>/gm" ],
        "latex": [ "/\\\\begin{minted}[^]*?\\\\end{minted}/gm" ]
    },
    // spellright.language settings
        // "spellright.language": [ "en-US","en-GB","sv-SE" ],                                      // Windows 10 ( groupDicitonaries = false )
        "spellright.language": [ "en","sv" ],                                                       // Windows 10 ( groupDictionaries = true )
        // "spellright.language": [ "English (American)","English (British)","Swedish" ],           // Linux

    "spellright.notificationClass": "warning",
    "spellright.parserByClass": {
        // Have not tested everything here yet.
        "bash": { "parser": "code" },
        "batch": { "parser": "code" },
        "latex": { "parser": "latex" },
        "markdown": { "parser": "markdown" },
        "plaintext": { "parser": "plain" },
        "powershell": { "parser": "code" },
        "python": { "parser": "code" },
        "xml": { "parser": "xml" }
    },

// Telemetry
    "telemetry.enableCrashReporter": false,
    "telemetry.enableTelemetry": false,

// Terminal
    "terminal.integrated.fontSize": 13,
    "terminal.integrated.cwd": "${fileDirname}",
    "terminal.integrated.wordSeparators": " ()[]{}',\"`â”€_;:.",
    

// todo-tree - Extension: gruntfuggly.todo-tree
    "todo-tree.general.statusBar": "current file",
    "todo-tree.tree.buttons.expand": false,
    "todo-tree.tree.buttons.filter": true,
    "todo-tree.tree.buttons.groupByTag": true,
    "todo-tree.tree.buttons.refresh": true,
    "todo-tree.tree.buttons.scanMode": true,

    "todo-tree.general.tagGroups": {
        "ALERT": [
            "ALERT",
            "CAUTION"
        ],
        "TEST": [
            "TEST",
            "TESTING",
            "testisen3"
        ],
        "FIX": [
            "FIX",
            "FIXME",
            "FIXIT"
        ],
        "NOTE": [
            "NOTE",
            "INFO"
        ],
        "WARNING": [
            "WARNING",
            "WARN"
        ],
        "QUESTION": [
            "QUESTION",
            "?"
        ]
    },
    "todo-tree.general.tags": [
        "ALERT",
            "CAUTION",
        "BUG",
        "DEBUG",
        "DONE",
        "FIX",
            "FIXME",
            "FIXIT",
        "HACK",
        "NOTE",
            "INFO",
        "TEST",
            "TESTING",
            "testisen3",
        "TODO",
        "WARNING",
            "WARN",
        "QUESTION",
            "?",
        "[ ]",
        "[x]"
    ],
    "todo-tree.highlights.customHighlight": {
        "ALERT": {
            "background": "#FFFF00",
            "foreground": "#000000",
            "type": "text-and-comment",
            "fontWeight": "bolder",
            "icon": "alert",
            "gutterIcon": true,
            "iconColour": "#FFFF00",
            "rulerColour": "#FFFF00",
            "rulerOpacity": "100",
            "rulerLane":"full"
        },
        "BUG": {
            "foreground": "#b300b3",
            "type": "text-and-comment",
            "icon": "bug",
            "rulerColour": "#b300b3",
            "rulerOpacity": "50"
        },
        "DEBUG": {
            "foreground": "#b300b3",
            "type": "text-and-comment",
            "icon": "chevron-up",
            "rulerColour": "#b300b3",
            "rulerOpacity": "50"
        },
        "DONE": {
            "foreground": "#00cc00",
            "type": "text-and-comment",
            "icon": "check"
        },
        "FIX": {
            "foreground": "#ff9933",
            "type": "text-and-comment",
            "icon": "chevron-down",
            "rulerColour": "#ff9933",
            "rulerOpacity": "50"
        },
        "HACK": {
            "foreground": "#ff9933",
            "type": "text-and-comment",
            "icon": "terminal"
        },
        "NOTE": {
            "foreground": "#1a75ff",
            "type": "text-and-comment",
            "icon": "bookmark",
            "rulerColour": "#1a75ff",
            "rulerOpacity": "50"
        },
        "TEST": {
            "foreground": "#e6e600",
            "type": "text-and-comment",
            "icon": "beaker",
            "rulerColour": "#e6e600",
            "rulerOpacity": "50"
        },
        "TODO": {
            "foreground": "#ff8000",
            "type": "text-and-comment",
            "icon": "chevron-right",
            "rulerColour": "#ff8000",
            "rulerOpacity": "50"
        },
        "WARNING": {
            "background": "#ff0000",
            "foreground": "#000000",
            "type": "text-and-comment",
            "fontWeight": "bolder",
            "icon": "alert",
            "gutterIcon": true,
            "iconColour": "#ff0000",
            "rulerColour": "#ff0000",
            "rulerOpacity": "100",
            "rulerLane":"full"
        },
        "QUESTION": {
            "foreground": "#1a75ff",
            "type": "text-and-comment",
            "icon": "question",
            "rulerColour": "#1a75ff",
            "rulerOpacity": "50"
        },
        "[ ]": {
            "foreground": "#b30000",
            "type": "text-and-comment",
            "icon": "chevron-right",
            "rulerColour": "#b30000",
            "rulerOpacity": "50"
        },
        "[x]": {
            "foreground": "#00cc00",
            "type": "text-and-comment",
            "icon": "check"
        }
    },
    "todo-tree.highlights.defaultHighlight": {
        "foregorund": "#ff6600",
        "type:": "text"
    },

    "todo-tree.highlights.schemes": ["file","untitled","vscode-userdata","output"],
    "todo-tree.tree.expanded": false,
    "todo-tree.tree.flat": false,
    "todo-tree.tree.labelFormat": "${tag} ${after}",

    "todo-tree.regex.regex": "((//|#|REM|:|;) ($TAGS)[ :\n\r][^\\n\\r]*([\\n\\r][\\s\\t]*(//|#|REM|:|;)  [^\\n\\r]*)*)|(/\\*(\\*?\\s*)*?($TAGS)(.|\\n|\\r)*?\\*/)|(<#(\\s|\\n|\\r)*?($TAGS)(.|\\n|\\r)*?#>)|(<!--[\\s|\\n|\\r]*?)($TAGS)(.|\\n|\\r)*?(-->)|(:[ ]'[\\s|\\n|\\r]*?)($TAGS)(.|\\n|\\r)*?([ ]')",

    // NOTE : Remember to separate each string with | when assembeling sections for "todo-tree.regex.regex"
    // NOTE : Single Line               ((//|\\s#|REM|:|;) ($TAGS) [^\\n]*) This has been depreciated and replaced by "Block Comment".
    // DONE : Block Comment             ((//|#|REM|:|;) ($TAGS)[ :\n\r][^\\n\\r]*([\\n\\r][\\s\\t]*(//|#|REM|:|;)  [^\\n\\r]*)*)
    // DONE : Java/CSS MultiLine        (/\\*(\\*?\\s*)*?($TAGS)(.|\\n|\\r)*?\\*/)
    // DONE : Powershell MultiLine      (<#(\\s|\\n|\\r)*?($TAGS)(.|\\n|\\r)*?#>)
    // DONE : HTML/XML MultiLine        (<!--[\\s|\\n|\\r]*?)($TAGS)(.|\\n|\\r)*?(-->)
    // DONE : BAT MultiLine             (:[ ]'[\\s|\\n|\\r]*?)($TAGS)(.|\\n|\\r)*?([ ]')

    // BUG : Subtags does not seem to work
    "todo-tree.regex.subTagRegex": "^\\s*\\((.*)\\)",

    "todo-tree.tree.scanMode": "open files",
    "todo-tree.tree.showCountsInTree": true,
    "todo-tree.tree.showScanModeButton": true,

// VS Icons
    "vsicons.dontShowNewVersionMessage": false,

// VS Intelli Code - Extension: visualstudioexptteam.vscodeintellicode
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",

// WORKBENCH
    "workbench.colorCustomizations": {
        "minimap.selectionHighlight": "#ffe8e8",
        // BUG : findMatchHiglight does not work
        "minimap.findMatcinghHighlight": "#ff0000"
    },
    "workbench.colorTheme": "Default Dark+",
    "workbench.editor.focusRecentEditorAfterClose": false,
    "workbench.editor.highlightModifiedTabs": true,
    "workbench.editorAssociations": [
        {
            "viewType": "jupyter.notebook.ipynb",                                                   // Extension: ms-toolsai.jupyter
            "filenamePattern": "*.ipynb"
        }
    ],
    "workbench.iconTheme": "vscode-icons"
}